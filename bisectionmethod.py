# -*- coding: utf-8 -*-
"""BisectionMethod.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1YetXITvFQ67s0X29u1kfIffVnnl-D2P9
"""

# Define the function here
def f(x:int):
  return x**6-x-1

#write a program to find the roots of non linear equations using bisection method
def bisect(a:int, b:int, E:float):
  while(True):
    c = (a+b)/2
    if (b-c) < E:
      return c
    elif f(c) <= 0:
      a = c
    else:
      b = c

def find_limit():
  a = 1
  while (True):
    if f(a) < 0 and f(a+1) > 0:
     return a, a+1
    elif f(a) > 0 and f(a+1) < 0:
      return a+1, a
    else:
      a += 1

if __name__=="__main__":
  E = 0.00005
  l,u = find_limit()
  print("Limits are",l,u)
  print("Root is",bisect(l,u,E))