# -*- coding: utf-8 -*-
"""Gauss_Siedel.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1KLoL2MzpWj4nIXppdWAr7KZ8fvNkrBgb
"""

import numpy as np

def Error(xn,x,E):
  return ((x-xn)/x)*100

def gauss_siedel(A,b,E):
  x1=x2=x3=0
  while(True):
    x = (b[0] - A[0,1]*x2 - A[0,2]*x3)/A[0,0]
    E1 = Error(x1,x,E)
    x1 = x
    x = (b[1] - A[1,0]*x1 - A[1,2]*x3)/A[1,1]
    E2 = Error(x2,x,E)
    x2 = x
    x = (b[2] - A[2,0]*x1 - A[2,1]*x2)/A[2,2]
    E3 = Error(x3,x,E)
    x3 = x
    if (E1<E) & (E2<E) & (E3<E):
      break
  return [x1,x2,x3]

if __name__=="__main__":
  A = np.array([[3, -0.1, -0.2],
                [0.1, 7, -0.3],
                [0.3, -0.2, 10]], dtype=float)
  b = np.array([7.85, -19.3, 71.4], dtype=float)
  E = 5
  solution = gauss_siedel(A, b, E)
  print("Solution:", solution)